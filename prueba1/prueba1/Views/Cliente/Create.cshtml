@model ClienteViewModel


@{
    ViewData["title"] = "Crear cliente";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Nuevo Cliente</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Cliente", FormMethod.Post))
                    {
                        @Html.HiddenFor(o => o.Id)
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Ingrese el nombre del cliente" })
                            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger small" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Ingrese el correo electrónico" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger small" })
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save me-1"></i> Guardar Cambios
                            </button>
                            @Html.ActionLink("← Volver a la lista", "Index", null, new { @class = "btn btn-outline-secondary" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
